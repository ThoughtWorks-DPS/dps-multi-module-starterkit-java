
plugins {
    id 'demo.java-application-conventions'
    id 'demo.java-open-tracing-common-conventions'
}

dependencies {
    implementation project(':api')
    implementation project(':controller')
    implementation project(':persistence:model')
    implementation project(':persistence:impl')
    implementation project(':service:impl')
    implementation project(':service:spi')
    implementation "org.springframework.boot:spring-boot-starter-web:${spring_boot_version}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation "io.opentracing.contrib:opentracing-spring-web-starter:${spring_boot_web_starter_version}"
    implementation("org.postgresql:postgresql:${postgresql_version}")

}

application {
    // Define the main class for the application.
    mainClass = 'io.twdps.starter.Service'
}

ext {
//    gitRevision = grgit.head().id
//    gitAbbRevision = grgit.head().abbreviatedId
//    // Please don't change for 'gitBranchName = grgit.branch.current().name'
//    // that doesn't work when the head is detachede, which is the case
//    // when running on the pipeline
//    gitBranchName = System.getProperty("git.branchName", "local")

}

bootJar {
    manifest {
        attributes(
                "Application-Version": "${project.version}",
//                "Application-Git-Commit": "${gitRevision}",
//                "Application-Git-Branch-Name": "${gitBranchName}",
                "Application-Timestamp": new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date())
        )
    }
    archiveFileName = "starter-java.jar"
}

