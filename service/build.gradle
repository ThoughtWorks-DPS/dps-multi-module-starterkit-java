
plugins {
    id 'demo.java-application-conventions'
    id 'demo.java-open-tracing-common-conventions'
    id "com.palantir.docker" apply true
    id "com.palantir.docker-run" apply true
}

dependencies {
    implementation project(':api')
    implementation project(':persistence:model')
    implementation project(':persistence:impl')
    implementation project(':SpiImpl')
    implementation project(':spi')
    compile group: "org.springframework.boot", name: "spring-boot-starter-web", version: "${spring_boot_version}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compile group: 'io.opentracing.contrib', name: 'opentracing-spring-web-starter', version: '3.0.1'
    implementation('org.postgresql:postgresql:9.4-1206-jdbc42')

}

application {
    // Define the main class for the application.
    mainClass = 'io.twdps.starter.Service'
}

//ext {
//    gitRevision = grgit.head().id
//    gitAbbRevision = grgit.head().abbreviatedId
//    // Please don't change for 'gitBranchName = grgit.branch.current().name'
//    // that doesn't work when the head is detached, which is the case
//    // when running on the pipeline
//    gitBranchName = System.getProperty("git.branchName", "local")
//}

bootJar {
    manifest {
        attributes(
                "Application-Version": "${project.version}",
//                "Application-Git-Commit": "${gitRevision}",
//                "Application-Git-Branch-Name": "${gitBranchName}",
                "Application-Timestamp": new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date())
        )
    }
    archiveFileName = "starter-java.jar"
}

docker {
    dependsOn(assemble)
    name "${dockerRegistry}/starter-java"
    tag "${dockerImageVersion}", "latest"
    noCache true
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image "${dockerRegistry}/starter-java:${dockerImageVersion}"
    ports '8080:8081'
}